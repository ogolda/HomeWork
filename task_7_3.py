# Реализовать программу работы с органическими клетками, состоящими из ячеек.
# Необходимо создать класс Клетка. В его конструкторе инициализировать параметр,
# соответствующий количеству ячеек клетки (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов:
# сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение,
# умножение и целочисленное (с округлением до целого) деление клеток, соответственно.
#cell - клетка, item - ячейка
class cell():
    def __init__(self, items):
        self.items = int(items)

    # Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
    def __add__(self, other):
        return self.items + other.items

    # Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
    # иначе выводить соответствующее сообщение.
    def __sub__(self, other):
        if self.items > other.items:
            return self.items - other.items
        else:
            return "Операция невыполнима!"

    # Умножение. Создается общая клетка из двух.
    # Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
    def __mul__(self, other):
        return self.items * other.items

    # Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется как целочисленное
    # деление количества ячеек этих двух клеток.
    def __truediv__(self, other):
        return self.items // other.items

    def make_order(self, items_in_row):
        print(f'В одном ряду содержится  { items_in_row } ячеек клетки')
        position = 0
        for i in range(self.items):
            position += 1
            if position % items_in_row == 0:
                print(i+1)
                position = 0
            else:
                print(i+1, end=' ')
        print()

c1 = cell(12)
c1.make_order(5)
c2 = cell(10)

print(f'Первая клетка содержит {c1.items} ячеек')
print(f'Первая клетка содержит {c2.items} ячеек')
print(f'Результат операции сложения клеток: {c1 + c2}')
print(f'Результат операции вычитания клеток: {c2 - c1}')
print(f'Результат операции вычитания клеток: {c1 - c2}')
print(f'Результат операции умножение клеток: {c1 * c2}')
print(f'Результат операции целочисленного деления клеток: {c1 / c2}')



# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n**.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n*****.